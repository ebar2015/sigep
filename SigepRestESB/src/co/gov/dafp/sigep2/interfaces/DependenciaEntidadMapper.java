package co.gov.dafp.sigep2.interfaces;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import co.gov.dafp.sigep2.bean.DependenciaEntidad;
import co.gov.dafp.sigep2.bean.DependenciaEntidadExample;
import co.gov.dafp.sigep2.bean.ext.DependenciaEntidadExt;

public interface DependenciaEntidadMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPENDENCIA_ENTIDAD
     *
     * @mbg.generated Mon Jan 29 14:57:36 COT 2018
     */
    long countByExample(DependenciaEntidadExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPENDENCIA_ENTIDAD
     *
     * @mbg.generated Mon Jan 29 14:57:36 COT 2018
     */
    int deleteByExample(DependenciaEntidadExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPENDENCIA_ENTIDAD
     *
     * @mbg.generated Mon Jan 29 14:57:36 COT 2018
     */
    int deleteByPrimaryKey(Long codDependenciaEntidad);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPENDENCIA_ENTIDAD
     *
     * @mbg.generated Mon Jan 29 14:57:36 COT 2018
     */
    int insert(DependenciaEntidad record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPENDENCIA_ENTIDAD
     *
     * @mbg.generated Mon Jan 29 14:57:36 COT 2018
     */
    int insertSelective(DependenciaEntidad record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPENDENCIA_ENTIDAD
     *
     * @mbg.generated Mon Jan 29 14:57:36 COT 2018
     */
    List<DependenciaEntidad> selectByExample(DependenciaEntidadExample example);
   
    List<DependenciaEntidad> selectDpendenciaPersona(DependenciaEntidadExt dependenciaEntidad);
    
    
    List<DependenciaEntidad> selectUnion();
    
    

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPENDENCIA_ENTIDAD
     *
     * @mbg.generated Mon Jan 29 14:57:36 COT 2018
     */
    DependenciaEntidad selectByPrimaryKey(Long codDependenciaEntidad);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPENDENCIA_ENTIDAD
     *
     * @mbg.generated Mon Jan 29 14:57:36 COT 2018
     */
    int updateByExampleSelective(@Param("record") DependenciaEntidad record, @Param("example") DependenciaEntidadExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPENDENCIA_ENTIDAD
     *
     * @mbg.generated Mon Jan 29 14:57:36 COT 2018
     */
    int updateByExample(@Param("record") DependenciaEntidad record, @Param("example") DependenciaEntidadExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPENDENCIA_ENTIDAD
     *
     * @mbg.generated Mon Jan 29 14:57:36 COT 2018
     */
    int updateByPrimaryKeySelective(DependenciaEntidad record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPENDENCIA_ENTIDAD
     *
     * @mbg.generated Mon Jan 29 14:57:36 COT 2018
     */
    int updateByPrimaryKey(DependenciaEntidad record);
    
    List<DependenciaEntidadExt> selectDependenciaEntidadFilter(DependenciaEntidadExt dependenciaEntidadExt);
    
    
    
    List<DependenciaEntidadExt> obtenerDependenciasEstructura(DependenciaEntidadExt dependenciaEntidad);

	DependenciaEntidadExt obtenerDependenciaEstructuraCodPadre(DependenciaEntidadExt dependenciaEntidad);
	
	DependenciaEntidadExt obtenerDependenciaEstructuraJerarquia(DependenciaEntidadExt dependenciaEntidad);
	
	List<DependenciaEntidadExt> obtenerDependenciaEstructuraHijos(DependenciaEntidadExt dependenciaEntidad);

	DependenciaEntidadExt obtenerDependenciaPadreByCodPredecesor(DependenciaEntidadExt dependenciaEntidad);    
    
    
    
}