#Usuario
USUARIO_SQL=select u.cod_usuario, u.cod_persona, u.nombre_usuario, p.primer_nombre || ' ' || p.segundo_nombre || ' ' || p.primer_apellido || ' ' || p.segundo_apellido nombre_persona, p.cod_tipo_identificacion, u.contrasena, u.numero_reintentos, u.numero_sesiones_activas, u.flg_bloqueado, u.flg_acepto_habeas_data, u.fecha_acepto_habeas, p.correo_electronico, u.fecha_vence, u.fecha_ultimo_ingreso, u.ip_autorizada, u.mac_autorizada, u.ticket, u.flg_es_interno, u.flg_estado from usuario u inner join persona p on u.cod_persona = p.cod_persona inner join v_tipo_documento td on p.cod_tipo_identificacion = td.tipo_documento_id
USUARIO_PASS_SQL=select u.cod_usuario, u.flg_bloqueado, u.nombre_usuario, p.primer_nombre || ' ' || p.segundo_nombre || ' ' || p.primer_apellido || ' ' || p.segundo_apellido nombre_persona, p.correo_electronico, p.correo_alternativo, u.contrasena, u.fecha_vence, u.ticket, u.flg_es_interno, u.flg_estado from usuario u inner join persona p on u.cod_persona = p.cod_persona inner join v_tipo_documento td on p.cod_tipo_identificacion = td.tipo_documento_id
USUARIO_ENTITY_SQL = select * from usuario u
USUARIO_FIND_BY_ESTADO_SQL=where u.flg_estado = :flg_estado
USUARIO_FIND_BY_BLOQUEADO_SQL=where u.flg_bloqueado = :flg_bloqueado
USUARIO_FIND_BY_LOGIN_SQL=where u.nombre_usuario = :nombre_usuario
USUARIO_FIND_BY_LOGIN_FULL_SQL=where p.numero_identificacion = :nombre_usuario and p.cod_tipo_identificacion = :cod_tipo_identificacion
USUARIO_FIND_BY_CORREO_SQL=where (p.correo_electronico = :correo_electronico and p.cod_tipo_identificacion = :cod_tipo_identificacion
USUARIO_FIND_BY_TICKET_SQL=where u.ticket = :ticket
USUARIO_FIND_BY_COD_PERSONA=where p.cod_persona=:cod_persona
UPDATE_ESTADO_USUARIO=update usuario set flg_estado = 0 where cod_usuario = :idusuario
USUARIO_PERSONA = inner join usuario u on u.cod_persona = p.cod_persona
USUARIO_BY_PERSONA= where U.cod_persona=:cod_persona
#Rol
ROL_ENTITY_SQL= select * from rol r
ROL_SQL=select r.cod_rol, r.cod_rol_padre, r.nombre, r.descripcion_rol, r.fecha_modificacion, r.flg_estado, r.flg_activo from rol r
ROL_FIND_BY_ESTADO_SQL=where r.flg_estado = COALESCE(:flg_estado, r.flg_estado)
ROL_FIND_BY_NOMBRE_SQL=where r.nombre = COALESCE(:nombre, r.nombre)
ROL_FIND_BY_DESCRIPCION_SQL=where r.nombre in (:nombre) and r.flg_activo = 1
#UsuarioRol
USUARIO_ROL_SQL=select ur.id, ur.usuario_id, ur.rol_id, ur.fecha_creacion, ur.fecha_actualizacion, ur.flg_estado from usuario_rol
USUARIO_ROL_FIND_BY_ESTADO_SQL=where ur.flg_estado = COALESCE(:flg_estado, ur.flg_estado)
USUARIO_ROL_FIND_BY_USUARIO_X_ROL_SQL= inner join usuario_rol ur on u.id = ur.usuario_id inner join rol p on ur.rol_id = p.id
#USUARIO_ROL_ENTIDAD
USUARIO_ROL_ENTIDAD_ENTITY_SQL =select * from usuario_rol_entidad ure
USUARIO_ROL_ENTIDAD_SQL = select ure.cod_usuario_rol_entidad, ure.cod_usuario_entidad, ure.cod_rol, ure.flg_activo, ure.flg_estado from usuario_rol_entidad ure
USUARIO_ROL_ENTIDAD_BY_USUARIO_ENTIDAD=where ure.cod_usuario_entidad = :cod_usuario_entidad and ure.cod_rol = :cod_rol
USUARIO_ROL_ENTIDAD_BY_ROL=where ure.cod_rol = :cod_rol and ure.flg_activo = 1
USUARIOROLENTIDAD_USUARIOENTIDAD=inner join usuario_rol_entidad ure on ure.cod_usuario_entidad = ue.cod_usuario_entidad
V_USUARIO_ROL_ENTIDAD_SQL=select * from v_usuario_rol_entidad ure
V_USUARIO_ROL_ENTIDAD_BY_ASOCIACION=where cod_persona = :personaId and cod_entidad = :idEntidad and cod_tipo_vinculacion = :tipoAsociacion
V_USUARIO_ROL_ENTIDAD_BY_ENTIDAD=where cod_persona = :personaId and cod_entidad = :idEntidad
USUARIO_ROL_ENTIDAD_VALIDAR_DESASOCIACION_SQL=select case when c.fecha_fin is not null and c.fecha_fin > sysdate then 0  when c.fecha_fin is not null and c.fecha_fin < sysdate then 1 else 1 end validacion from usuario_entidad ue inner join usuario u on u.cod_usuario = ue.cod_usuario inner join persona p on p.cod_persona = u.cod_persona left outer join contrato c on c.cod_persona = p.cod_persona and c.cod_entidad = ue.cod_entidad and c.fecha_fin > sysdate 
USUARIO_ROL_ENTIDAD_VALIDAR_DESASOCIACION_BY_USUARIO_ENTIDAD=where ue.cod_usuario=:cod_usuario and ue.cod_entidad=:cod_entidad and ue.flg_activo=1 and u.flg_estado=1
#Entidad
ENTIDAD_BASICA_SQL=select e.cod_entidad, e.nit, e.nombre_entidad from entidad e
ENTIDAD_USAURIOENTIDAD=inner join entidad e on e.cod_entidad = ue.cod_entidad
#EntidadUsuario
ENTIDAD_USUARIO_BASICA_SQL=select distinct e.cod_entidad, e.nit, e.nombre_entidad, e.codigo_sigep from entidad e inner join usuario_entidad ue on e.cod_entidad = ue.cod_entidad inner join usuario_rol_entidad ure on ue.cod_usuario_entidad = ure.cod_usuario_entidad
ENTIDAD_USUARIO_BASICA_TODAS_SQL=select distinct e.cod_entidad, e.nit, 'TODAS' nombre_entidad, e.codigo_sigep from entidad e inner join usuario_entidad ue on e.cod_entidad = ue.cod_entidad inner join usuario_rol_entidad ure on ue.cod_usuario_entidad = ure.cod_usuario_entidad inner join rol r on ure.cod_rol = r.cod_rol where nombre in ('ADMINFUNC', 'AUDITOR', 'ADMINPOLI', 'ADMINENT') and e.nombre_entidad = 'DAFP'
ENTIDAD_USUARIO_FIND_BY_USUARIO_SQL=where ue.cod_usuario = :usuario and ure.flg_activo = 1 and ue.flg_activo = 1 and e.flg_activo = 1 and e.cod_estado_entidad <> 1481 order by e.nombre_entidad asc
ENTIDAD_USUARIO_FIND_BY_PREDECESORA_SQL=where e.cod_ent_predecesor is not null and e.cod_ent_predecesor = :entidadPredecesora and e.cod_estado_entidad = 1
ENTIDAD_USUARIO_FIND_BY_NOMBRE_SQL=where e.nombre_entidad = :nombreEntidad and e.cod_estado_entidad = 1
USUARIO_BY_ENTIDAD_SQL=select u.cod_usuario from usuario_entidad ue inner join usuario u on u.cod_usuario = ue.cod_usuario inner join persona p on p.cod_persona = u.cod_persona left join vinculacion v on v.cod_persona = p.cod_persona left join contrato c on c.cod_persona = p.cod_persona
FIND_USUARIOS_BY_ENTIDAD=where cod_entidad = :entidad and u.flg_estado=1 and (to_date(v.fecha_finalizacion) - sysdate) > (select valor_parametro from parametrica where nombre_parametro='dias inactividad') or (to_date(c.fecha_fin) - sysdate) > (select valor_parametro from parametrica where nombre_parametro='dias inactividad');
UPDATE_ACTIVO_USUARIO_ENTIDAD=update usuario_entidad set flg_activo = 0 where cod_usuario = :idusuario
USUARIOENTIDAD_USUARIO=inner join usuario_entidad ue on ue.cod_usuario = u.cod_usuario
USUARIO_ENTIDAD_ASOCIACION=where ue.flg_activo = 1 and ue.cod_usuario = :usuario_id and ue.cod_entidad = :entidad_id
USUARIO_ENTIDAD_ACTIVA=and ue.flg_activo = 1 and ue.cod_entidad = :entidad_id
#ProcesoArchivo
PROCESO_ARCHIVO_SQL=select pa.cod_proceso_cargue, pa.descripcion, pa.plantilla_xml, pa.clase_java, pa.menu from v_proceso_archivo pa
PROCESO_ARCHIVO_FIND_BY_DESCRIPCION_SQL=where upper(pa.descripcion) = upper(:descripcion)
PROCESO_ARCHIVO_FIND_BY_PLANTILLA_SQL=where pa.plantilla_xml = upper(:nombrePlantilla)
PROCESO_ARCHIVO_FIND_BY_MENU_SQL=where pa.menu = :recursomenu 
PROCESO_ARCHIVO_FIND_BY_MODULO_SQL=where pa.menu like (:modulo)
PROCESO_ARCHIVO_FIND_BY_PLANTILLAS_SQL=where pa.plantilla_xml in :nombresPlantilla
#ProcesoBAckground
PROCESO_BACKGROUND_SQL=select pb.cod_proceso_back, pb.descripcion, pb.plantilla_xml, pb.clase_java from v_proceso_background pb
PROCESO_BACKGROUND_FIND_BY_DESCRIPCION_SQL=where upper(pb.descripcion) = upper(:descripcion)
PROCESO_BACKGROUND_FIND_BY_PLANTILLAS_SQL=where pb.plantilla_xml in :nombresPlantilla
#ArchivoCargue
ARCHIVO_CARGUE_SQL=select ac.cod_cargue_archivo, ac.nombre_archivo_cargue, ac.cod_proceso_cargue, ac.total_registros, ac.fecha_cargue, ac.cod_usuario_cargue, ac.fecha_archivo, ac.flg_glosado, ac.flg_estadp from archivo_cargue ac
ARCHIVO_CARGUE_FIND_BY_ESTADO_SQL=where ac.flg_estadp = :flg_estadp
ARCHIVO_CARGUE_FIND_BY_NOMBRE_ARCHIVO_SQL=where ac.nombre_archivo_cargue = :nombre_archivo_cargue
#Recursos menu
RECURSO_ACTIVO_PERFIL_USUARIO_VW_SQL=select rapu.cod_recurso, rapu.descripcion, rapu.codigo_ventana, rapu.orden, rapu.cod_recurso_padre, rapu.titulo_ventana, rapu.identificador, rapu.pagina, rapu.mostrar_en_menu, rapu.icono_menu, rapu.imagen_menu, rapu.color_menu, rapu.flg_bloqueado, rapu.flg_estado, rapu.login, rapu.entidad, rapu.rol from v_recurso_activo_perfil_usuario rapu
ROL_USUARIO_ENTIDAD_SQL=select distinct r.cod_rol, r.cod_rol_padre, r.nombre, r.descripcion_rol, r.flg_activo, r.flg_estado from v_recurso_activo_perfil_usuario rapu inner join rol r on rapu.rol = r.cod_rol
ROL_USUARIO_ENTIDAD_FIND_BY_LOGIN_SQL=where (rapu.login = :login or rapu.login is null) and rapu.mostrar_en_menu = 1
RECURSO_ACTIVO_PERFIL_USUARIO_VW_FIND_BY_CODIGO_VENTANA_SQL=where rapu.codigo_ventana = :codigoVentana 
RECURSO_ACTIVO_PERFIL_USUARIO_VW_FIND_BY_CODIGO_PADRE_SQL=where rapu.cod_recurso_padre is not null
RECURSO_ACTIVO_PERFIL_USUARIO_VW_FIND_BY_LOGIN_SQL=where (rapu.login = :login or rapu.login is null) and rapu.mostrar_en_menu = 1 and rapu.entidad = :entidad and rapu.flg_estado = 1
RECURSO_ACTIVO_PERFIL_USUARIO_VW_ORDER_BY=order by rapu.cod_recurso_padre, rapu.orden
#Persona
PERSONA_SQL=select p.cod_persona,p.cod_genero,p.cod_estado_civil,p.cod_factor_rh,p.cod_tipo_identificacion,p.numero_identificacion,p.primer_nombre,p.segundo_nombre,p.primer_apellido,p.segundo_apellido,p.resumen_profesional,p.numero_libreta_militar,p.distrito_militar,p.libreta_militar_url,p.foto_url,p.documento_identificacion_url,p.fecha_nacimiento,p.expuesto_politicamente,p.correo_electronico,p.correo_alternativo,p.flg_activo,p.flg_estado from persona p
PERSONA_FIND_BY_TIPODOCUMENTO_AND_NUMEROIDENTIFICACION=where p.cod_tipo_identificacion=:cod_tipo_identificacion and UPPER(p.numero_identificacion)=:numero_identificacion
PERSONA_FILTER_BY_ENTIDAD=inner join usuario u on p.cod_persona=u.cod_persona inner join usuario_entidad ue on u.cod_usuario=ue.cod_usuario inner join entidad e on ue.cod_entidad=e.cod_entidad where e.cod_entidad=:entidad
PERSONA_ASOCIADA_ENTIDAD=where p.cod_tipo_identificacion=:cod_tipo_identificacion and p.numero_identificacion=:numero_identificacion and e.cod_entidad=:entidad and ue.flg_activo = 1 and ure.flg_activo = 1 and u.flg_estado = 1
#DatoContacto
DATO_CONTACTO_SQL= select * from dato_contacto dc
DATO_CONTACTO_BY_PERSONA= where dc.cod_persona =:cod_persona
#DatoAdicionales
DATO_ADICIONAL_SQL= select * from dato_adicional da
DATO_ADICIONAL_BY_PERSONA= where da.cod_persona =:cod_persona
#NacionalidadPerfil
NACIONALIDAD_PERFIL_SQL= select * from nacionalidad_perfil np
NACIONALIDAD_PERFIL_BY_PERSONA= where np.flg_activo = 1 and np.cod_persona =:cod_persona
NACIONALIDAD_PERFIL_BY_PERSONA_AND_PAIS= where np.cod_persona =:cod_persona and np.cod_pais =:cod_pais
#V_TipoDocumento
TIPO_DOCUMENTO_SQL=select tipodoc.tipo_documento_id,tipodoc.sigla,tipodoc.descripcion from v_tipo_documento tipodoc order by tipodoc.sigla
#V_GENERO
GENERO_SQL=select genero.genero_id,genero.sigla,genero.descripcion from v_genero genero order by genero.sigla
#V_CLASE_LIBRETA_MILITAR
CLASE_LIBRETA_MILITAR_SQL=select clase_libreta_militar.clase_libreta_militar_id,clase_libreta_militar.sigla,clase_libreta_militar.descripcion from v_clase_libreta_militar clase_libreta_militar order by clase_libreta_militar.sigla
#V_TIPO_ASOCIACION
TIPO_ASOCIACION_SQL=select tipo_asociacion.tipo_asociacion_id,tipo_asociacion.sigla,tipo_asociacion.descripcion from v_tipo_asociacion tipo_asociacion order by tipo_asociacion.sigla
#V_TIPO_ENTIDAD
TIPO_ENTIDAD_SQL=select tipo_entidad.tipo_entidad_id,tipo_entidad.sigla,tipo_entidad.descripcion from v_tipo_entidad tipo_entidad order by tipo_entidad.sigla
#V_TIPO_ZONA
TIPO_ZONA_SQL=select tipo_zona.tipo_zona_id,tipo_zona.sigla,tipo_zona.descripcion from v_tipo_zona tipo_zona order by tipo_zona.sigla
#V_ESTADO_CIVIL
ESTADO_CIVIL_SQL=select estado_civil.estado_civil_id,estado_civil.sigla,estado_civil.descripcion from v_estado_civil estado_civil order by estado_civil.sigla
#V_POBLACION_ETNICA
POBLACION_ETNICA_SQL=select poblacion_etnica.poblacion_etnica_id,poblacion_etnica.sigla,poblacion_etnica.descripcion from v_poblacion_etnica poblacion_etnica order by poblacion_etnica.sigla
#V_TIPO_DISCAPACIDAD
TIPO_DISCAPACIDAD_SQL=select tipo_discapacidad.tipo_discapacidad_id,tipo_discapacidad.sigla,tipo_discapacidad.descripcion from v_tipo_discapacidad tipo_discapacidad order by tipo_discapacidad.sigla
#UsuarioEntidad
USUARIO_ENTIDAD_SQL=select ue.cod_usuario_entidad,ue.cod_usuario,ue.cod_entidad,ue.flg_activo,ue.cod_tipo_vinculacion,ue.aud_fecha_actualizacion,ue.aud_cod_usuario,ue.aud_cod_rol,ue.aud_accion from usuario_entidad ue
USUARIO_ENTIDAD_CONTRATO_VINCULACION_SQL=select ue.cod_usuario_entidad,ue.cod_usuario,ue.cod_entidad,ue.flg_activo,ue.cod_tipo_vinculacion,ue.aud_fecha_actualizacion,ue.aud_cod_usuario,ue.aud_cod_rol,ue.aud_accion from usuario_entidad ue inner join usuario u on u.cod_usuario = ue.cod_usuario
USUARIO_ENTIDAD_FIND_BY_CODUSUARIO_CODENTIDAD=where ue.cod_usuario=:cod_usuario and ue.cod_entidad=:cod_entidad
ACTIVO_USUARIO_ENTIDAD_FIND_BY_CODUSUARIO_CODENTIDAD=where ue.cod_usuario=:cod_usuario and ue.cod_entidad=:cod_entidad and ue.flg_activo=1 and u.FLG_ESTADO=1
#Reporte
REPORTE_SQL=select r.cod_reporte, r.descripcion, r.plantilla_xml, r.clase_java, r.menu, r.clase_java from v_reporte r
REPORTE_FIND_BY_DESCRIPCION_SQL=where upper(r.descripcion) = upper(COALESCE(:descripcion, r.descripcion)) or upper(r.plantilla_xml) = upper(COALESCE(:descripcion, r.plantilla_xml))
REPORTE_FIND_BY_PLANTILLA_SQL=where upper(r.plantilla_xml) = upper(COALESCE(:plantilla_xml, r.plantilla_xml)) and r.menu = COALESCE(:menu, r.menu) and r.menu like :modulo
REPORTE_FIND_BY_PLANTILLAS_SQL=where r.plantilla_xml in(:plantilla_xml)
#PermisoUsuarioRol
PERMISO_USUARIO_ROL_SQL=select pur.cod_permiso_rol_acciones, pur.cod_permiso_rol, pur.cod_rol, pur.cod_recurso, pur.icono_menu, pur.cod_usuario, pur.accion, pur.control_html, pur.pagina, pur.control_html_padre from sigep2.v_permiso_usuario_rol pur inner join sigep2.recurso r on pur.control_html = r.codigo_ventana
PERMISO_USUARIO_ROL_FIND_BY_USUARIO_SQL=where pur.cod_usuario = COALESCE(:cod_usuario, pur.cod_usuario)
PERMISO_USUARIO_ROL_FIND_BY_CONTROL_HTML_SQL=where pur.control_html_padre = COALESCE(:control_html_padre, pur.control_html_padre)
PERMISO_USUARIO_ROL_FIND_BY_ACCION_SQL=where pur.accion = COALESCE(:accion, pur.accion)
PERMISO_USUARIO_ROL_FIND_BY_ROL_SQL=where pur.cod_rol in (:roles)
PERMISO_USUARIO_ROL_ORDER_BY=order by r.orden
#HojaDeVida
CONSULTAR_HOJA_VIDA=select * from v_hoja_vida
CONSULTAR_EXPERIENCIA_PROFESIONAL_SQL = select ep.cod_experiencia_profesional,vte.descripcion,ep.nombre_entidad, ep.dependencia, ep.cargo, ep.fecha_ingreso, ep.fecha_retiro, ep.flg_valida_jefe from experiencia_profesional ep inner join v_tipo_entidad vte on vte.tipo_entidad_id =  ep.cod_tipo_entidad
CONSULTAR_EXPERIENCIA_PROFESIONAL_BY_PERSONA_SQL = where upper(ep.cod_persona) = COALESCE(upper(:codPersona), ep.cod_persona)
CONTAR_EXPERIENCIAS_PROFESIONAL_SQL = select count(*) from experiencia_profesional ep
CONSULTAR_EXPERIENCIA_DOCENTE_SQL = select * from experiencia_docente ed
EXPERIENCIA_DOCENTE_BY_CODIGOEXPDOCENTE = where ed.cod_experiencia_docente = COALESCE(:codExpDocente, ed.cod_experiencia_docente)
EXPERIENCIA_DOCENTE_BY_PERSONA = where ed.cod_persona = COALESCE(:cod_persona, ed.cod_persona)
EXPERIENCIA_DOCENTE_NUMERO_FILAS_BY_PERSONA =  select count(*) FROM experiencia_docente exp where exp.cod_persona = COALESCE(:cod_persona, exp.cod_persona)
LISTAR_EXPERIENCIA_DOCENTE_SQL = select ed.cod_experiencia_docente, ie.nombre_institucion as nombre, vne.DESCRIPCION as nivel_educativo, vac.DESCRIPCION as area_conocimiento,  p.NOMBRE_PAIS as paistabla, ed.fecha_ingreso as fecha_ingreso, ed.fecha_finalizacion as fecha_finalizacion, ed.FLG_VERIFICADO as VERIFICADO from experiencia_docente ed
OBTENER_NOMBRES_EXPERIENCIA_DOCENTE_SQL = left join INSTITUCION_EDUCATIVA ie on ie.COD_INSTITUCION_EDUCATIVA = ed.COD_INSTITUCION left join V_NIVEL_EDUCATIVO vne on vne.NIVEL_EDUCATIVO_ID = ed.COD_NIVEL_EDUCATIVO inner join V_AREA_CONOCIMIENTO vac on vac.AREA_CONOCIMIENTO_ID = ed.COD_AREA_CONOCIMIENTO inner join pais p on p.COD_PAIS = ed.COD_PAIS
#Auditoria
AUDITORIA_CONFIGURACION_SQL=select audc.cod_tabla_auditoria, audc.nombre_tabla, audc.descripcion_tabla, audc.flg_insert, audc.flg_delete, audc.flg_update, audc.flg_select, audc.fecha_inicio_auditoria, audc.fecha_fin_auditoria from auditoria_configuracion audc
#V_ACCION_AUDITORIA
ACCION_AUDITORIA_SQL=select accion_auditoria_id, sigla, accion from v_accion_auditoria
#Paramétrica
LISTAR_TABLAS_PARAMETRICA=select cod_tabla_parametrica codigo, nombre_parametro nombre, (valor_parametro || '. Estado: ' || flg_estado) descripcion from parametrica where cod_padre_parametrica is  null and tipo_parametro='T'
LISTAR_PARAMETROS_PARAMETRICA=select nombre_parametro, valor_parametro, flg_estado from  parametrica where COD_PADRE_PARAMETRICA=:cod
#PAIS_SQL
PAIS_SQL = select pais.cod_pais, pais.nombre_pais, pais.flg_activo from pais order by pais.nombre_pais asc
#DEPARTAMENTO_SQL
DEPARTAMENTO_SQL = select departamento.cod_departamento, departamento.cod_pais, departamento.nombre_departamento, departamento.flg_activo from departamento
#MUNICIPIO_SQL
MUNICIPIO_SQL = select municipio.cod_municipio, municipio.cod_departamento, municipio.cod_municipio_dane, municipio.nombre_municipio, municipio.flg_activo from municipio
#EVALUACION_DESEMPEÑO
CONSULTAR_EVALUACION_DESEMPENO=select * from evaluacion_desempeno where cod_persona = :cod_persona AND cod_entidad = :cod_entidad and rownum <= 1 order by fecha_inicio desc
CONSULTAR_PERSONAS_FILTRO=select * from Persona p 
CONSULTAR_PERSONAS_FILTRO_NOMBRE=and lower(primer_nombre) like :primer_nombre
CONSULTAR_PERSONAS_FILTRO_NOMBRE_SEGUNDO=and lower(segundo_nombre) like :segundo_nombre
CONSULTAR_PERSONAS_FILTRO_APELLIDO=and lower(primer_apellido) like :primer_apellido
CONSULTAR_PERSONAS_FILTRO_APELLIDO_SEGUNDO=and lower(segundo_apellido) like :segundo_apellido
CONSULTAR_PERSONAS_FILTRO_NUM_DOC=and numero_identificacion like :numero_identificacion
CONSULTAR_PERSONAS_FILTRO_TIP_DOC=and cod_tipo_identificacion = :cod_tipo_identificacion
CONSULTAR_PERSONAS_FILTRO_TIP_DOC=and cod_tipo_identificacion = :cod_tipo_identificacion
#TIPO_ORIENTACION_SQL
TIPO_ORIENTACION_SQL = select tipo_orientacion.tipo_orientacion_id,tipo_orientacion.sigla,tipo_orientacion.descripcion from v_tipo_orientacion tipo_orientacion order by tipo_orientacion.sigla
#VIAS
TIPO_VIA_SQL = select tipo_via.tipo_via_id,tipo_via.sigla,tipo_via.descripcion from v_tipo_via tipo_via order by tipo_via.sigla
#LETRA VIA
TIPO_LETRA_SQL = select tipo_letra.tipo_letra_id,tipo_letra.sigla,tipo_letra.descripcion from v_tipo_letra tipo_letra order by tipo_letra.sigla
#NIVEL EDUCATIVO
NIVEL_EDUCATIVO_SQL = select nivel_educativo.nivel_educativo_id,nivel_educativo.sigla,nivel_educativo.descripcion from v_nivel_educativo nivel_educativo order by nivel_educativo.sigla
#AREA CONOCIMIENTO
AREA_CONOCIMIENTO_SQL = select * from v_area_conocimiento
#CARGOPORENTIDAD
CONSULTAR_CARGOS_SQL = select * from cargo c
CONSULTAR_CARGOS_ENTIDAD_SQL = where c.cod_entidad = :cod_entidad
#MOTIVORETIRO
CONSULTAR_MOTIVO_RETIRO_SQL = select * from v_motivo_retiro mr
#v JORNADA LABORAL
CONSULTAR_JORNADA_LABORAL_SQL = select * from v_jornada_laboral
#GERENCIA PUBLICA 
OBTENER_PARAMETRICAS_CABEZA_FAMILIA=select * from V_CABEZA_FAMILIA
#INSTITUCION_EDUCATIVA
INSTITUCION_EDUCATIVA_SQL = select ie.COD_INSTITUCION_EDUCATIVA, ie.COD_INSTITUCION_MEN, ie.COD_TIPO_INSTITUCION, ie.NOMBRE_INSTITUCION from INSTITUCION_EDUCATIVA ie
#TIPO DE INSTITUCION_EDUCATIVA
TIPO_INSTITUCION_EDUCATIVA_SQL = select tipo_institucion.cod_tipo_institucion, tipo_institucion.sigla, tipo_institucion.descripcion from v_tipo_institucion tipo_institucion order by tipo_institucion.sigla